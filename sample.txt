import com.aventstack.extentreports.Status;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.ExpectedConditions;
import java.time.Duration;

public class BasePage {

    protected WebDriver driver;
    protected WebDriverWait wait;

    public BasePage(WebDriver webDriver) {
        this.driver = webDriver;
        this.wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    }

    // ✅ Your existing wait method
    public WebElement waitForVisibility(By locator) {
        try {
            WebElement element = this.wait.until(ExpectedConditions.visibilityOfElementLocated(locator));
            return element;
        } catch (TimeoutException e) {
            ExtentManager.getTest().fail("❌ ERROR: Timed out waiting for element to be visible. Locator: " + locator);
            throw e;
        }
    }

    // ✅ Simplified universal validation method (no return type)
    public void validateElementVisibility(By locator, String elementName) {
        try {
            WebElement element = waitForVisibility(locator);
            if (element != null && element.isDisplayed()) {
                ExtentManager.getTest().log(Status.PASS, "✅ Element is visible: " + elementName);
            } else {
                ExtentManager.getTest().log(Status.FAIL, "❌ Element is not visible: " + elementName);
            }
        } catch (TimeoutException e) {
            // Timeout already logged inside waitForVisibility
            ExtentManager.getTest().log(Status.FAIL, "❌ Element not visible or not found: " + elementName);
        } catch (Exception e) {
            ExtentManager.getTest().log(Status.FAIL,
                "⚠️ Error validating visibility for: " + elementName + " - " + e.getMessage());
        }
    }
}
